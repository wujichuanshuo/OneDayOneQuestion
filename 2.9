class Solution {
    public int subarraysWithKDistinct(int[] A, int K) {
        return subarrayNomorethanK(A,K)-subarrayNomorethanK(A,K-1);
    }
	private int subarrayNomorethanK(int[] A, int k) {//不同元素不超过k的子数组个数
		int l=0,r=0;
        int ans=0;
        int[] count=new int[A.length+1];//记录每个整数出现的频数。A[i]取值在[1,A.length]
        int diffElem=0;//count[]非零元素个数，即不同的整数个数
        while(r<A.length){
            if(count[A[r]]==0) diffElem++;
            count[A[r++]]++;//右滑窗口
            while(diffElem>k){//窗口内的不同整数个数超过了K，缩小窗口
                count[A[l]]--;
                if(count[A[l]]==0)diffElem--;  
                l++;
            }
            ans+=r-l;//窗口内所有的“不同整数不超过k的子数组个数”(左闭右开)
        }
        return ans;
	}
}

作者：CYINGENOHALT
链接：https://leetcode-cn.com/problems/subarrays-with-k-different-integers/solution/hua-dong-chuang-kou-ji-he-si-xiang-by-cy-k865/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
